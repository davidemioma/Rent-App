services:
  # client:
  #   build:
  #     context: .
  #     dockerfile: client/Dockerfile
  #   ports:
  #     - 3000:3000
  #   env_file:
  #     - client/.env
  #   volumes:
  #     - ./client:/app/client
  #     - /app/client/node_modules
  #     - /app/client/.next

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    volumes:
      - ./server:/app
      - go_mod_cache:/go/pkg/mod
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
      - PORT=8080
      - DATABASE_URL=postgres://postgres:king123@postgres:5432/rentify-db?sslmode=disable
      - AWS_REGION=eu-west-2
      - USER_POOL_ID=eu-west-2_wJe9x4TEq
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: king123
      POSTGRES_DB: rentify-db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      bash -c "
      apt-get update && apt-get install -y postgresql-16-postgis-3 &&
      docker-entrypoint.sh postgres
      "

volumes:
  postgres_data:
  go_mod_cache:
# docker compose up --build
